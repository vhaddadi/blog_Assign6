import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { BlogPost } from './BlogPost';


let perPage = 6;

@Injectable({
  providedIn: 'root'
})

export class PostServiceService {

  constructor(private http: HttpClient) { }

  getAllPosts():Observable<BlogPost[]>{

    const perPage = Number.MAX_SAFE_INTEGER;
    return this.http.get<BlogPost[]>(`https://w422-blog-api.herokuapp.com/api/posts?page=1&perPage=${perPage}`);
    
  }

  newPost(data: BlogPost):Observable<any>{

    return this.http.post<any>(`https://w422-blog-api.herokuapp.com/api/posts`, data);
  }

  updatePostById(id: string, data: BlogPost): Observable<any>{

    return this.http.put<any>(`https://w422-blog-api.herokuapp.com/api/posts/${id}`, data);
  }

  deletePostById(id: string): Observable<any>{

    return this.http.delete<any>(`https://w422-blog-api.herokuapp.com/api/posts/${id}`);
  }

  getPosts(page: number, tag: string, category: string): Observable<BlogPost[]>{
    //******* need to check!********

    let urlTemplate = `https://w422-blog-api.herokuapp.com/api/posts?page=${page}&perPage=${perPage}`;
   
    if(tag != null || tag != undefined){
      urlTemplate += `&tag=${tag}`;
    }
    if(category != null || category != undefined){
      urlTemplate += `&category=${category}`;
    }
    //console.log(url);
    return this.http.get<BlogPost[]>(urlTemplate);

 }

  getPostbyId(id: any): Observable<BlogPost> {

    return this.http.get<BlogPost>(`https://w422-blog-api.herokuapp.com/api/posts/${id}`);

  }

  getCategories(): Observable<any> {

    return this.http.get<any>(`https://w422-blog-api.herokuapp.com/api/categories`);
  }

 
  getTags(): Observable<string[]> {

    return this.http.get<string[]>(`https://w422-blog-api.herokuapp.com/api/tags`);

  }

}


/// posttable.html


<br />
<div class="container">
<div class="row">
<div class="col-md-12">
<a routerLink='/admin/newPost' class="btn btn-success btn-sm pull-right">+&nbsp;&nbsp;New Post</a><br /><br />
<table class="table table-hover">
<thead>
<tr>
<th>Title</th>
<th>Post Date</th>
<th>Category</th>
</tr>
</thead>
<tbody>
<tr  *ngFor="let posts of blogPosts" (click)="rowClicked($event, posts._id)">
<td>{{ posts.title }}</td>
<td>{{ posts.postDate | date:'mediumDate' }}</td>
<td>{{ posts.category }}</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<br />



export class PostsTableComponent implements OnInit ,OnDestroy{

  blogPosts: Array<BlogPost> =[];
    private posts;
  
  constructor(private data : PostServiceService, private router: Router ) { }

  ngOnInit(): void {
    this.posts = this.data.getAllPosts().subscribe(data => this.blogPosts = data);
  }

  ngOnDestroy(){
    if (this.posts) this.posts.unsubscribe();
  }

   rowClicked(e, id) {
    this.router.navigate(['/admin/post', id]);
  }
}
